version: '3.5'
services:
    nginx:
        build:
            context: ./docker/nginx
            dockerfile: Dockerfile
            args:
                BUILD_ENV: dev
        image: '${COMPOSE_PROJECT_NAME}/nginx:latest'
        container_name: ${COMPOSE_PROJECT_NAME}-nginx
        restart: always
        ports:
            - '${FORWARD_NGINX_HTTP_PORT:-80}:80'
            - '${FORWARD_NGINX_HTTPS_PORT:-443}:443'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        volumes:
            - './:/var/www/html:ro,cached'
        networks:
            - laravel-network
        depends_on:
            - laravel

    laravel: &laravel-template
        build:
            context: .
            dockerfile: Dockerfile
            args:
                BUILD_ENV: dev
                HOST_UID: ${HOST_UID}
                HOST_GID: ${HOST_GID}
        image: '${COMPOSE_PROJECT_NAME}/laravel:latest'
        container_name: ${COMPOSE_PROJECT_NAME}-laravel
        restart: always
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            PHP_IDE_CONFIG: "serverName=0.0.0.0"
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - './:/var/www/html:cached'
        networks:
            - laravel-network
        depends_on:
            - pgsql
            - redis

    supervisord:
        <<: *laravel-template
        container_name: ${COMPOSE_PROJECT_NAME}-supervisord
        expose: []
        command: ["/usr/bin/supervisord"]

    pgsql:
        build:
            context: ./docker/postgresql
            dockerfile: Dockerfile
        image: '${COMPOSE_PROJECT_NAME}/postrgesql:latest'
        container_name: ${COMPOSE_PROJECT_NAME}-postrgesql
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
        volumes:
            - './storage/data/postgresql:/var/lib/postgresql/data:delegated'
            - './docker/postgresql/dev/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - laravel-network
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
            retries: 3
            timeout: 5s

    redis:
        build:
            context: ./docker/redis
            dockerfile: Dockerfile
        image: '${COMPOSE_PROJECT_NAME}/redis:latest'
        container_name: ${COMPOSE_PROJECT_NAME}-redis
        restart: always
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
        volumes:
            - './storage/data/redis:/data:delegated'
            - './docker/redis/redis.conf:/var/local/etc/redis/redis.conf'
        networks:
            - laravel-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

    mailpit:
        image: 'axllent/mailpit:latest'
        container_name: mail
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - laravel-network

networks:
    laravel-network:
        name: laravel-network
        driver: bridge

